---
interface Link {
  name: string;
  href: string;
  isAnchor?: boolean;
}

interface Props {
  links: Link[];
  currentPath?: string;
  mobile?: boolean;
}

const { links, currentPath = '', mobile = false } = Astro.props;

// Determinar qué enlace está activo basado en la URL actual
function isActiveLink(href: string, currentPath: string): boolean {
  // Para enlaces anchor (#about, #services, etc.)
  if (href.startsWith('/#')) {
    return currentPath === '/' || currentPath === '';
  }
  
  // Para rutas normales (/about, /contact, etc.)
  if (href.startsWith('/') && !href.includes('#')) {
    return currentPath === href;
  }
  
  return false;
}
---

{mobile ? (
  <!-- Navegación Mobile - CSS Only -->
  <ul class="flex flex-col space-y-1">
    {links.map((link) => {
      const isActive = isActiveLink(link.href, currentPath);
      return (
        <li>
          <a
            href={link.href}
            class={`
              block w-full px-4 py-3 text-left rounded-lg text-base
              transition-colors duration-200
              focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2
              ${isActive 
                ? 'bg-primary/10 text-primary font-medium border-l-4 border-primary' 
                : 'text-gray-700 hover:bg-gray-50 hover:text-primary'
              }
            `}
            aria-current={isActive ? 'page' : undefined}
          >
            {link.name}
          </a>
        </li>
      );
    })}
  </ul>
) : (
  <!-- Navegación Desktop - CSS Only -->
  <ul class="flex items-center gap-6 lg:gap-8">
    {links.map((link) => {
      const isActive = isActiveLink(link.href, currentPath);
      return (
        <li>
          <a
            href={link.href}
            class={`
              relative px-3 py-2 text-base lg:text-lg font-medium
              transition-all duration-200 ease-out
              focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 rounded-lg
              min-h-[44px] flex items-center
              ${isActive 
                ? 'text-primary' 
                : 'text-gray-700 hover:text-primary'
              }
            `}
            aria-current={isActive ? 'page' : undefined}
          >
            {link.name}
            {isActive && (
              <span 
                class="absolute bottom-0 left-0 right-0 h-0.5 bg-primary rounded-full"
                aria-hidden="true"
              />
            )}
          </a>
        </li>
      );
    })}
  </ul>
)}

<style>
  /* CSS-only smooth scrolling */
  html {
    scroll-behavior: smooth;
  }
  
  /* Enhance focus visibility */
  a:focus-visible {
    outline: 2px solid var(--color-primary-600);
    outline-offset: 2px;
  }
  
  /* Active link indicator animation */
  a[aria-current="page"]::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 50%;
    transform: translateX(-50%);
    width: 6px;
    height: 6px;
    background: var(--color-primary-600);
    border-radius: 50%;
    animation: activeIndicator 0.3s ease-out;
  }
  
  @keyframes activeIndicator {
    from {
      opacity: 0;
      transform: translateX(-50%) scale(0);
    }
    to {
      opacity: 1;
      transform: translateX(-50%) scale(1);
    }
  }
  
  /* Hover effects */
  a:not([aria-current="page"]):hover::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 50%;
    transform: translateX(-50%);
    width: 4px;
    height: 4px;
    background: var(--color-primary-400);
    border-radius: 50%;
    opacity: 0.6;
    transition: all 0.2s ease-out;
  }
</style>
