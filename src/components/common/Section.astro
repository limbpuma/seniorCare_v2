---
type BackgroundType = "white" | "primary" | "primaryLight" | "accent" | "transparent";
type PaddingType = "none" | "xs" | "small" | "medium" | "large" | "xl";
type WidthType = "full" | "wide" | "medium" | "narrow";
type AnimationType = "fade-in" | "slide-in" | "zoom-in" | "grid-in" | "parallax" | "none";

interface Props {
  background?: BackgroundType;
  padding?: PaddingType;
  width?: WidthType;
  height?: string;
  class?: string;
  id?: string;
  animation?: AnimationType;
}

const {
  background = "white",
  padding = "medium",
  width = "full",
  height = "100",
  class: className,
  id,
  animation = "none",
  ...props
} = Astro.props;

const backgroundClasses: Record<BackgroundType, string> = {
  white: "bg-white",
  primary: "bg-deep-blue",
  primaryLight: "bg-primary-light",
  accent: "bg-accent",
  transparent: "bg-transparent",
};

const paddingClasses: Record<PaddingType, string> = {
  none: "",
  xs: "py-2 px-2 sm:py-2 sm:px-4 md:py-3 md:px-6 lg:py-3 lg:px-6 xl:py-4 xl:px-8 2xl:py-4 2xl:px-8",
  small: "py-3 px-3 sm:py-5 sm:px-7 md:py-6 md:px-8 lg:py-7 lg:px-9 xl:py-8 xl:px-10 2xl:py-9 2xl:px-11",
  medium: "py-6 px-4 sm:py-10 sm:px-8 md:py-12 md:px-10 lg:py-14 lg:px-12 xl:py-16 xl:px-14 2xl:py-18 2xl:px-16",
  large: "py-8 px-4 sm:py-16 sm:px-8 md:py-20 md:px-10 lg:py-24 lg:px-12 xl:py-28 xl:px-14 2xl:py-32 2xl:px-16",
  xl: "py-10 px-4 sm:py-20 sm:px-8 md:py-24 md:px-10 lg:py-28 lg:px-12 xl:py-32 xl:px-14 2xl:py-36 2xl:px-16",
};

const widthClasses: Record<WidthType, string> = {
  full: "w-full",
  wide: "w-full max-w-7xl mx-auto px-2 sm:px-6 lg:px-8",
  medium: "w-full max-w-5xl mx-auto px-2 sm:px-6 lg:px-8",
  narrow: "w-full max-w-3xl mx-auto px-2 sm:px-6 lg:px-8",
};

const animationClass = animation !== "none" ? `${animation} animate-on-scroll` : "";

const innerClasses = [
  height === "100%" ? paddingClasses[padding].replace(/py-\d+/g, 'py-4') : paddingClasses[padding],
  widthClasses[width],
  "transition-all duration-300 ease-in-out will-change-auto",
  animationClass,
].filter(Boolean);
---

<section 
  id={id} 
  class:list={[backgroundClasses[background], "w-full", animationClass, className]}
  style={height === "100%" ? "height: 100%; min-height: 100%;" : `min-height: ${height};`} 
  {...props}
>  <div class:list={innerClasses}>
    <div class="w-full h-full flex flex-col justify-center">
      <slot />
    </div>
  </div>
</section>